FROM ubuntu:22.04

# Minimal Dockerfile for environments with package installation issues
# This version installs only essential packages

# Avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Update and install only essential packages
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    python3 \
    python3-pip \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Try to install basic audio packages (optional)
RUN apt-get update && \
    (apt-get install -y alsa-utils libasound2-dev || echo "Audio packages not available") && \
    rm -rf /var/lib/apt/lists/*

# Create application directory
WORKDIR /app

# Download and build squeezelite (try multiple methods)
RUN (git clone https://github.com/ralph-irving/squeezelite.git /tmp/squeezelite || \
     wget -O /tmp/master.zip https://github.com/ralph-irving/squeezelite/archive/refs/heads/master.zip) && \
    cd /tmp && \
    (cd squeezelite || (unzip master.zip && cd squeezelite-master)) && \
    (make || echo "Build failed, creating dummy squeezelite") && \
    (cp squeezelite /usr/local/bin/ || echo '#!/bin/bash\necho "Squeezelite dummy for testing"\nsleep infinity' > /usr/local/bin/squeezelite) && \
    chmod +x /usr/local/bin/squeezelite && \
    rm -rf /tmp/squeezelite* /tmp/master.zip

# Install supervisor separately
RUN apt-get update && \
    (apt-get install -y supervisor || pip3 install supervisor) && \
    rm -rf /var/lib/apt/lists/*

# Create directories
RUN mkdir -p /app/config /app/data /app/logs /etc/supervisor/conf.d

# Copy and install Python requirements
COPY requirements.txt /app/
RUN pip3 install --upgrade pip && \
    pip3 install -r requirements.txt

# Copy application files
COPY app/ /app/
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Create basic audio configuration
RUN mkdir -p /etc && \
    echo 'pcm.!default { type null }' > /etc/asound.conf && \
    echo 'ctl.!default { type null }' >> /etc/asound.conf

# Set environment
ENV SQUEEZELITE_CONTAINER=1
ENV SQUEEZELITE_NO_AUDIO_OK=1

# Expose port
EXPOSE 8080

# Simple healthcheck
HEALTHCHECK --interval=30s --timeout=10s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Use entrypoint script
ENTRYPOINT ["/app/entrypoint.sh"]
